user www-data;
pid /run/nginx.pid;

# Worker Settings (Maximum workers = worker_processes * worker_connections)
worker_processes auto;				# $ grep processor /proc/cpuinfo | wc -l

events {
	worker_connections 1024;    # $ ulimit -n
	multi_accept on;            # Needs enough number of workers
	use epoll;                  # Requires linux kernel version upper than 2.6
}

http {
	# Basic Settings
	sendfile on;                # Copy data between one FD and other from within the kernel
	tcp_nopush on;              # Send its HTTP response head in one packet
	tcp_nodelay on;             # Disable buffer data-sends (Good for sending frequent small bursts of data in real time)
	types_hash_max_size 2048;   # Increase this value if types_hash error occurs

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Timeout Settings
	keepalive_timeout 15;
	client_body_timeout 10;     # Send "request timed out" message to client if the body is not loaded in time
	client_header_timeout 10;   # Send "request timed out" message to client if the body is not loaded in time
	send_timeout 10;            # Delete client connection if the client stops reading data (Higher value, higher memory usage)

	# Logging Settings
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	# Gzip Settings
	gzip on;                    # Enable compression
	gzip_disable "msie6";       # Prevent bug from IE 6
	gzip_vary on;               # Return "Vary: Accept-Encoding" on header
	gzip_comp_level 6;          # Higher value, more compression
	gzip_proxied expired no-cache no-store private auth;            # Cases of gzip compression when request come through proxy
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	# Virtual Host Configs
	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
	
	# DOS Attack Protection
	limit_req_zone $binary_remote_addr zone=req_limit_per_ip:100m rate=20r/s; # Do not allow more than 20 requests per second at an average
	limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:100m;

	# Connect to File Socket
	upstream survey {
		server unix:/dev/shm/survey.sock;
	}

	server {
		listen 80;
		server_name pingkorea.com;
		charset utf-8;
		client_max_body_size 20M;
		
		# etags attribute requires version upper than 1.3 (default: on)
		
		location /health_check  {
			access_log off;
			return 200;
		}	
		
		# Logging Settings (Disable log to boost up the speed) 
		access_log off;
		error_log off;
		
		# Django static (Cache-control on HTTP header on client's browser)
		location /static {
			alias /var/www/pingkorea.com/static;
			expires 30d;
		}
		
		# Non-media requests to the Django server
		location / {
		
			# Redirect HTTP to HTTPS
			#if ($http_x_forwarded_proto != 'https') {
			#	return 301 https://$host$request_uri;
			#} 
			
			# DOS Attack Protection
			limit_req zone=req_limit_per_ip burst=20 nodelay;   # Bursts not exceeding 20 requests per second
			limit_conn conn_limit_per_ip 100;                   # Maximum 100 connections per IP
			
			uwsgi_pass survey;
			include /etc/nginx/uwsgi_params;
		}
	}

	# Redirect www to non-www
	server {
		listen 80;
		server_name www.pingkorea.com;
		return 301 $scheme://pingkorea.com;
	}
}
